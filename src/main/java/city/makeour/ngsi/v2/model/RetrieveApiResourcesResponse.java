/*
 * FIWARE-NGSI v2 Specification
 * TODO: Add a description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package city.makeour.ngsi.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RetrieveApiResourcesResponse
 */
@JsonPropertyOrder({
  RetrieveApiResourcesResponse.JSON_PROPERTY_ENTITIES_URL,
  RetrieveApiResourcesResponse.JSON_PROPERTY_TYPES_URL,
  RetrieveApiResourcesResponse.JSON_PROPERTY_SUBSCRIPTIONS_URL,
  RetrieveApiResourcesResponse.JSON_PROPERTY_REGISTRATIONS_URL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-27T19:56:40.594359+09:00[Asia/Tokyo]", comments = "Generator version: 7.12.0")
public class RetrieveApiResourcesResponse {
  public static final String JSON_PROPERTY_ENTITIES_URL = "entities_url";
  @jakarta.annotation.Nonnull
  private String entitiesUrl;

  public static final String JSON_PROPERTY_TYPES_URL = "types_url";
  @jakarta.annotation.Nonnull
  private String typesUrl;

  public static final String JSON_PROPERTY_SUBSCRIPTIONS_URL = "subscriptions_url";
  @jakarta.annotation.Nonnull
  private String subscriptionsUrl;

  public static final String JSON_PROPERTY_REGISTRATIONS_URL = "registrations_url";
  @jakarta.annotation.Nonnull
  private String registrationsUrl;

  public RetrieveApiResourcesResponse() {
  }

  public RetrieveApiResourcesResponse entitiesUrl(@jakarta.annotation.Nonnull String entitiesUrl) {
    
    this.entitiesUrl = entitiesUrl;
    return this;
  }

  /**
   * URL which points to the entities resource
   * @return entitiesUrl
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITIES_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEntitiesUrl() {
    return entitiesUrl;
  }


  @JsonProperty(JSON_PROPERTY_ENTITIES_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntitiesUrl(@jakarta.annotation.Nonnull String entitiesUrl) {
    this.entitiesUrl = entitiesUrl;
  }

  public RetrieveApiResourcesResponse typesUrl(@jakarta.annotation.Nonnull String typesUrl) {
    
    this.typesUrl = typesUrl;
    return this;
  }

  /**
   * URL which points to the types resource
   * @return typesUrl
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPES_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTypesUrl() {
    return typesUrl;
  }


  @JsonProperty(JSON_PROPERTY_TYPES_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTypesUrl(@jakarta.annotation.Nonnull String typesUrl) {
    this.typesUrl = typesUrl;
  }

  public RetrieveApiResourcesResponse subscriptionsUrl(@jakarta.annotation.Nonnull String subscriptionsUrl) {
    
    this.subscriptionsUrl = subscriptionsUrl;
    return this;
  }

  /**
   * URL which points to the subscriptions resource
   * @return subscriptionsUrl
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTIONS_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubscriptionsUrl() {
    return subscriptionsUrl;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTIONS_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscriptionsUrl(@jakarta.annotation.Nonnull String subscriptionsUrl) {
    this.subscriptionsUrl = subscriptionsUrl;
  }

  public RetrieveApiResourcesResponse registrationsUrl(@jakarta.annotation.Nonnull String registrationsUrl) {
    
    this.registrationsUrl = registrationsUrl;
    return this;
  }

  /**
   * URL which points to the registrations resource
   * @return registrationsUrl
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGISTRATIONS_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegistrationsUrl() {
    return registrationsUrl;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATIONS_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegistrationsUrl(@jakarta.annotation.Nonnull String registrationsUrl) {
    this.registrationsUrl = registrationsUrl;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveApiResourcesResponse retrieveApiResourcesResponse = (RetrieveApiResourcesResponse) o;
    return Objects.equals(this.entitiesUrl, retrieveApiResourcesResponse.entitiesUrl) &&
        Objects.equals(this.typesUrl, retrieveApiResourcesResponse.typesUrl) &&
        Objects.equals(this.subscriptionsUrl, retrieveApiResourcesResponse.subscriptionsUrl) &&
        Objects.equals(this.registrationsUrl, retrieveApiResourcesResponse.registrationsUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entitiesUrl, typesUrl, subscriptionsUrl, registrationsUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveApiResourcesResponse {\n");
    sb.append("    entitiesUrl: ").append(toIndentedString(entitiesUrl)).append("\n");
    sb.append("    typesUrl: ").append(toIndentedString(typesUrl)).append("\n");
    sb.append("    subscriptionsUrl: ").append(toIndentedString(subscriptionsUrl)).append("\n");
    sb.append("    registrationsUrl: ").append(toIndentedString(registrationsUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

