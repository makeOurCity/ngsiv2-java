/*
 * FIWARE-NGSI v2 Specification
 * TODO: Add a description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package city.makeour.ngsi.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateAttributeValueRequest
 */
@JsonPropertyOrder({
  UpdateAttributeValueRequest.JSON_PROPERTY_ADDRESS,
  UpdateAttributeValueRequest.JSON_PROPERTY_ZIP_CODE,
  UpdateAttributeValueRequest.JSON_PROPERTY_CITY,
  UpdateAttributeValueRequest.JSON_PROPERTY_COUNTRY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-27T19:56:40.594359+09:00[Asia/Tokyo]", comments = "Generator version: 7.12.0")
public class UpdateAttributeValueRequest {
  public static final String JSON_PROPERTY_ADDRESS = "address";
  @jakarta.annotation.Nonnull
  private String address;

  public static final String JSON_PROPERTY_ZIP_CODE = "zipCode";
  @jakarta.annotation.Nonnull
  private Integer zipCode;

  public static final String JSON_PROPERTY_CITY = "city";
  @jakarta.annotation.Nonnull
  private String city;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  @jakarta.annotation.Nonnull
  private String country;

  public UpdateAttributeValueRequest() {
  }

  public UpdateAttributeValueRequest address(@jakarta.annotation.Nonnull String address) {
    
    this.address = address;
    return this;
  }

  /**
   * 
   * @return address
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddress(@jakarta.annotation.Nonnull String address) {
    this.address = address;
  }

  public UpdateAttributeValueRequest zipCode(@jakarta.annotation.Nonnull Integer zipCode) {
    
    this.zipCode = zipCode;
    return this;
  }

  /**
   * 
   * @return zipCode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ZIP_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getZipCode() {
    return zipCode;
  }


  @JsonProperty(JSON_PROPERTY_ZIP_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setZipCode(@jakarta.annotation.Nonnull Integer zipCode) {
    this.zipCode = zipCode;
  }

  public UpdateAttributeValueRequest city(@jakarta.annotation.Nonnull String city) {
    
    this.city = city;
    return this;
  }

  /**
   * 
   * @return city
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCity(@jakarta.annotation.Nonnull String city) {
    this.city = city;
  }

  public UpdateAttributeValueRequest country(@jakarta.annotation.Nonnull String country) {
    
    this.country = country;
    return this;
  }

  /**
   * 
   * @return country
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountry(@jakarta.annotation.Nonnull String country) {
    this.country = country;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAttributeValueRequest updateAttributeValueRequest = (UpdateAttributeValueRequest) o;
    return Objects.equals(this.address, updateAttributeValueRequest.address) &&
        Objects.equals(this.zipCode, updateAttributeValueRequest.zipCode) &&
        Objects.equals(this.city, updateAttributeValueRequest.city) &&
        Objects.equals(this.country, updateAttributeValueRequest.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, zipCode, city, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAttributeValueRequest {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

