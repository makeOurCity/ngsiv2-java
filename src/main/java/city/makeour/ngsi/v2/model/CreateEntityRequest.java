/*
 * FIWARE-NGSI v2 Specification
 * TODO: Add a description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package city.makeour.ngsi.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateEntityRequest
 */
@JsonPropertyOrder({
  CreateEntityRequest.JSON_PROPERTY_TYPE,
  CreateEntityRequest.JSON_PROPERTY_ID,
  CreateEntityRequest.JSON_PROPERTY_TEMPERATURE,
  CreateEntityRequest.JSON_PROPERTY_HUMIDITY,
  CreateEntityRequest.JSON_PROPERTY_LOCATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-27T19:56:40.594359+09:00[Asia/Tokyo]", comments = "Generator version: 7.12.0")
public class CreateEntityRequest {
  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nonnull
  private String type;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_TEMPERATURE = "temperature";
  @jakarta.annotation.Nonnull
  private Object temperature;

  public static final String JSON_PROPERTY_HUMIDITY = "humidity";
  @jakarta.annotation.Nonnull
  private Object humidity;

  public static final String JSON_PROPERTY_LOCATION = "location";
  @jakarta.annotation.Nonnull
  private Object location;

  public CreateEntityRequest() {
  }

  public CreateEntityRequest type(@jakarta.annotation.Nonnull String type) {
    
    this.type = type;
    return this;
  }

  /**
   * 
   * @return type
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@jakarta.annotation.Nonnull String type) {
    this.type = type;
  }

  public CreateEntityRequest id(@jakarta.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * 
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull String id) {
    this.id = id;
  }

  public CreateEntityRequest temperature(@jakarta.annotation.Nonnull Object temperature) {
    
    this.temperature = temperature;
    return this;
  }

  /**
   * 
   * @return temperature
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMPERATURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getTemperature() {
    return temperature;
  }


  @JsonProperty(JSON_PROPERTY_TEMPERATURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemperature(@jakarta.annotation.Nonnull Object temperature) {
    this.temperature = temperature;
  }

  public CreateEntityRequest humidity(@jakarta.annotation.Nonnull Object humidity) {
    
    this.humidity = humidity;
    return this;
  }

  /**
   * 
   * @return humidity
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HUMIDITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getHumidity() {
    return humidity;
  }


  @JsonProperty(JSON_PROPERTY_HUMIDITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHumidity(@jakarta.annotation.Nonnull Object humidity) {
    this.humidity = humidity;
  }

  public CreateEntityRequest location(@jakarta.annotation.Nonnull Object location) {
    
    this.location = location;
    return this;
  }

  /**
   * 
   * @return location
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocation(@jakarta.annotation.Nonnull Object location) {
    this.location = location;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEntityRequest createEntityRequest = (CreateEntityRequest) o;
    return Objects.equals(this.type, createEntityRequest.type) &&
        Objects.equals(this.id, createEntityRequest.id) &&
        Objects.equals(this.temperature, createEntityRequest.temperature) &&
        Objects.equals(this.humidity, createEntityRequest.humidity) &&
        Objects.equals(this.location, createEntityRequest.location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, temperature, humidity, location);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEntityRequest {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    humidity: ").append(toIndentedString(humidity)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

